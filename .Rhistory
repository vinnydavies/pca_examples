library(readr)
library(dplyr)
##### 1. Iris Example #####
# 1.1 Load data
data(iris)
head(iris, 3)
# 1.2. Data standardisation
iris$Sepal.Length = scale(iris$Sepal.Length)
iris$Sepal.Width = scale(iris$Sepal.Width)
iris$Petal.Length = scale(iris$Petal.Length)
iris$Petal.Width = scale(iris$Petal.Width)
# 1.3. 2-Dimension PCA Projection
pca <- prcomp(iris[,1:4], rank=2)
# 1.4. Visualisation
autoplot(pca, data = iris, colour = 'Species')
# 1.5. Explained Variance
summary(pca)$importance[3,1:2]
### end ###
##### 2. Digits Example #####
# 2.1. Load data
mnist_raw <- read_csv("https://pjreddie.com/media/files/mnist_train.csv", col_names = FALSE)
mnist_raw <- data.frame(mnist_raw)
# 2.2 Data standardisation
y <- factor(as.character(mnist_raw[,1]))
for(i in 2:785){
if(sum(mnist_raw[,i])>0){
mnist_raw[,i] <- scale(mnist_raw[,i])
}
}
# 2.3. 2-Dimension PCA Projection
pca <- prcomp(mnist_raw[,-1], rank=2)
# 2.4. Visualisation
autoplot(pca, data = mnist_raw, colour = 'X1')
mnist_raw_0_7 <- mnist_raw[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '0'),]
autoplot(pca, data = mnist_raw_0_7, colour = 'X1')
mnist_raw_0_7 <- mnist_raw[which(mnist_raw$X1 == '2' | mnist_raw$X1 == '3'),]
autoplot(pca, data = mnist_raw_2_3, colour = 'X1')
# 2.5. Explained Variance
summary(pca)$importance[3,1:2]
### end ###
# 2.4. Visualisation
autoplot(pca, data = mnist_raw, colour = 'X1')
pca
mnist$X1
mnist_raw$X1
as.factor(mnist_raw$X1)
# 2.2 Data standardisation
y <- as.factor(as.character(mnist_raw[,1]))
# 2.2 Data standardisation
mnist_raw[,1] <- as.factor(as.character(mnist_raw[,1]))
for(i in 2:785){
if(sum(mnist_raw[,i])>0){
mnist_raw[,i] <- scale(mnist_raw[,i])
}
}
# 2.3. 2-Dimension PCA Projection
pca <- prcomp(mnist_raw[,-1], rank=2)
# 2.4. Visualisation
autoplot(pca, data = mnist_raw, colour = 'X1')
mnist_raw_0_7 <- mnist_raw[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
autoplot(pca, data = mnist_raw_0_7, colour = 'X1')
plot(pca[,1], pca[,2])
pca
colnames(pca)
head(pca)
pca$rotation
pca$scale
pca$rotation
pca$x
mnist_raw[,2]
mean(mnist_raw[,2])
mean(mnist_raw[,1000])
mean(mnist_raw[,500])
df(mnist_raw[,500])
sd(mnist_raw[,500])
mnist_raw[1:10,1000]
mnist_raw[1:10,100]
mnist_raw[1:10,101]
mnist_raw[1:10,99]
mnist_raw <- read_csv("https://pjreddie.com/media/files/mnist_train.csv", col_names = FALSE)
mnist_raw <- data.frame(mnist_raw)
mean(mnist_raw[,100]
)
mnist_raw[,1] <- as.factor(as.character(mnist_raw[,1]))
for(i in 2:785){
if(sum(mnist_raw[,i])>0){
mnist_raw[,i] <- scale(mnist_raw[,i])
}
}
auto(pca, which=which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'), data = mnist_raw, colour = 'X1')
autoplot(pca, which=which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'), data = mnist_raw, colour = 'X1')
palette(rainbow(6))
col= palette(rainbow(6))
col
col= palette(rainbow(19))
col= palette(rainbow(10))
col
mnist_raw <- read_csv("https://pjreddie.com/media/files/mnist_train.csv", col_names = FALSE)
mnist_raw <- data.frame(mnist_raw)
# 2.2 Data standardisation
for(i in 2:785){
if(sum(mnist_raw[,i])>0){
mnist_raw[,i] <- scale(mnist_raw[,i])
}
}
plot(pca$x[,1], pca$x[,2])
colours <- c()
for(i in 1:nrow(mnist_raw)){
colours[i] <- base_colours[mnist_raw$X1[i]]
}
base_colours <- palette(rainbow(10))
colours <- c()
for(i in 1:nrow(mnist_raw)){
colours[i] <- base_colours[mnist_raw$X1[i]]
}
mnist_raw$X1[i]
base_colours[0]
base_colours
base_colours <- palette(rainbow(10))
colours <- c()
for(i in 1:nrow(mnist_raw)){
colours[i] <- base_colours[mnist_raw$X1[i]+1]
}
plot(pca$x[,1], pca$x[,2], colours)
plot(pca$x[,1], pca$x[,2], col=colours)
autoplot(pca, data = mnist_raw, colour = 'X1', xlab='Principal Component 1', ylab='Principal Component 2', main='2 Component PCA')
autoplot(pca, data = mnist_raw, colour = 'X1', xlab=c('Principal Component 1'), ylab=c('Principal Component 2'), main=c('2 Component PCA'))
autoplot(pca, data = mnist_raw, colour = 'X1', xlab='Principal Component 1')
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
components <- pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours)
plot(components, col=colours, main='title')
plot(components, col=colours, main='2 Component PCA')
as.character(0:9)
components <- pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA')
legend(1, 95, legend=as.character(0:9),
col=c("red", "blue"), cex=0.8)
legend(-30, 20, legend=as.character(0:9),
col=c("red", "blue"), cex=0.8)
legend(-30, 20, legend=as.character(0:9),
col=c("red", "blue"),pch=1, cex=0.8)
plot(components, col=colours, main='2 Component PCA',pch=20)
legend(-30, 20, legend=as.character(0:9),
col=c("red", "blue"),pch=20, cex=0.8)
legend(-35, 27, legend=as.character(0:9),
col=c("red", "blue"),pch=20, cex=1.5)
components <- pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20)
legend(-32, 27, legend=as.character(0:9),
col=c("red", "blue"),pch=20, cex=1.5)
components <- pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20)
legend(-33, 28, legend=as.character(0:9),
col=c("red", "blue"),pch=20, cex=1.5)
components <- pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20)
legend(-33, 28, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- pca$x[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20)
legend(-33, 28, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- pca$x[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7')], main='2 Component PCA',pch=20)
legend(-33, 28, legend=c('0','7'),
col=base_colours[c(1,8)],pch=20, cex=1.5)
components <- -pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20)
legend(-33, 28, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- -pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20)
legend(-33, 28, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- -pca$x[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7')], main='2 Component PCA',pch=20)
legend(-33, 28, legend=c('0','7'),
col=base_colours[c(1,8)],pch=20, cex=1.5)
components <- -pca$x[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7')], main='2 Component PCA',pch=20)
legend(-33, 28, legend=c('2','3'),
col=base_colours[c(3,4)],pch=20, cex=1.5)
legend(-33, 28, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5, cex.label=1.5)
legend(-33, 28, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5, cex.lab=1.5)
components <- -pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.label=1.5, cex=1.5, cex.axis=1.5)
legend(-33, 28, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- -pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-33, 28, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- -pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-33, 28, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
# Load the relevant packages
library(ggfortify)
library(readr)
library(dplyr)
##### 1. Iris Example #####
# 1.1 Load data
data(iris)
head(iris, 3)
# 1.2. Data standardisation
iris$Sepal.Length = scale(iris$Sepal.Length)
iris$Sepal.Width = scale(iris$Sepal.Width)
iris$Petal.Length = scale(iris$Petal.Length)
iris$Petal.Width = scale(iris$Petal.Width)
# 1.3. 2-Dimension PCA Projection
pca <- prcomp(iris[,1:4], rank=2)
# 1.4. Visualisation
autoplot(pca, data = iris, colour = 'Species')
iris$Species
colours[which(iris$Species == 'virginica')] <- 'green'
base_colours <- c('red', 'green', 'blue')
colours <- rep('red', nrow(iris))
colours[which(iris$Species == 'versicolor')] <- 'green'
colours[which(iris$Species == 'virginica')] <- 'green'
components <- -pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-33, 28, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
legend(0, 2.5, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
legend(-0.25, 2.7, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
legend(-0.5, 2.7, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
components <- -pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-0.5, 2.7, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
base_colours <- c('red', 'green', 'blue')
colours <- rep('red', nrow(iris))
colours[which(iris$Species == 'versicolor')] <- 'green'
colours[which(iris$Species == 'virginica')] <- 'blue'
components <- pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-0.5, 2.7, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
legend(-0.5, -2.7, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
legend(-0.5, -2, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
legend(-0.5, -1.8, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
components <- pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-0.5, -1.8, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
components <- cbind(pca$x[,1],-pca$x[,2])
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-0.5, -1.8, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
legend(-0.5, 2.7, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
components <- -pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
base_colours <- c('red', 'green', 'blue')
colours <- rep('red', nrow(iris))
colours[which(iris$Species == 'versicolor')] <- 'green'
colours[which(iris$Species == 'virginica')] <- 'blue'
components <- cbind(pca$x[,1],-pca$x[,2])
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-0.5, 2.7, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
# Load the relevant packages
library(ggfortify)
library(readr)
library(dplyr)
##### 1. Iris Example #####
# 1.1 Load data
data(iris)
head(iris, 3)
# 1.2. Data standardisation
iris$Sepal.Length = scale(iris$Sepal.Length)
iris$Sepal.Width = scale(iris$Sepal.Width)
iris$Petal.Length = scale(iris$Petal.Length)
iris$Petal.Width = scale(iris$Petal.Width)
# 1.3. 2-Dimension PCA Projection
pca <- prcomp(iris[,1:4], rank=2)
# 1.4. Visualisation
components <- pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
base_colours <- c('red', 'green', 'blue')
colours <- rep('red', nrow(iris))
colours[which(iris$Species == 'versicolor')] <- 'green'
colours[which(iris$Species == 'virginica')] <- 'blue'
components <- cbind(-pca$x[,1],pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-0.5, 2.7, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
# 1.5. Explained Variance
summary(pca)$importance[3,1:2]
components <- cbind(pca$x[,1],pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-0.5, 2.7, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
components <- cbind(pca$x[,1],pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-0.5, 2.7, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
components <- cbind(-pca$x[,1],pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
components <- cbind(pca$x[,1],pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-0.5, 2.7, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
components <- cbind(pca$x[,1],-pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-0.5, 2.7, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
legend(-2, -1.8, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
legend(2, -1.8, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
legend(2.2, -1.8, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
base_colours <- c('red', 'green', 'blue')
colours <- rep('red', nrow(iris))
colours[which(iris$Species == 'versicolor')] <- 'green'
colours[which(iris$Species == 'virginica')] <- 'blue'
components <- cbind(pca$x[,1],-pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(2.3, -1.8, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=5, cex.axis=1.5)
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=2.5, cex.axis=1.5)
legend(2.3, -1.8, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
# 1.5. Explained Variance
summary(pca)$importance[3,1:2]
legend(2.3, -1.8, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=2.5)
legend(1.7, -1.5, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=2.5)
components <- cbind(pca$x[,1],-pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=2.5, cex.axis=1.5)
legend(2.3, -1.8, legend=c('setosa', 'versicolor', 'virginica'),
col=base_colours,pch=20, cex=1.5)
mnist_raw <- read_csv("https://pjreddie.com/media/files/mnist_train.csv", col_names = FALSE)
mnist_raw <- data.frame(mnist_raw)
# 2.2 Data standardisation
for(i in 2:785){
if(sum(mnist_raw[,i])>0){
mnist_raw[,i] <- scale(mnist_raw[,i])
}
}
# 2.3. 2-Dimension PCA Projection
pca <- prcomp(mnist_raw[,-1], rank=2)
# 2.4. Visualisation
base_colours <- palette(rainbow(10))
colours <- c()
for(i in 1:nrow(mnist_raw)){
colours[i] <- base_colours[mnist_raw$X1[i]+1]
}
components <- -pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-33, 28, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- -pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-30,20), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(-33, 28, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
legend(33, -28, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
legend(31, -10, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
legend(32.5, -5, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
legend(32.5, -6, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- -pca$x
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-30,20), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- -pca$x[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7')], main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-30,20), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=c('0','7'),
col=base_colours[c(1,8)],pch=20, cex=1.5)
components_raw <- cbind(pca$x[,1],-pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components_raw) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours, main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-30,20), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- component_raw[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
#colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7')], main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-30,20), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=c('0','7'),
col=base_colours[c(1,8)],pch=20, cex=1.5)
components_raw <- cbind(pca$x[,1],-pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components_raw) <- c('Principal Component 1', 'Principal Component 2')
plot(components_raw, col=colours, main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-30,20), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components_raw <- cbind(-pca$x[,1],pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components_raw) <- c('Principal Component 1', 'Principal Component 2')
plot(components_raw, col=colours, main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-30,20), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components_raw <- cbind(-pca$x[,1],pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components_raw) <- c('Principal Component 1', 'Principal Component 2')
plot(components_raw, col=colours, main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-20,30), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- component_raw[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
#colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7')], main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-30,20), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=c('0','7'),
col=base_colours[c(1,8)],pch=20, cex=1.5)
components <- components_raw[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
#colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7')], main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-30,20), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=c('0','7'),
col=base_colours[c(1,8)],pch=20, cex=1.5)
components_raw <- cbind(-pca$x[,1],pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components_raw) <- c('Principal Component 1', 'Principal Component 2')
plot(components_raw, col=colours, main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-20,30), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- components_raw[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
#colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7')], main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-20,30), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=c('0','7'),
col=base_colours[c(1,8)],pch=20, cex=1.5)
components <- -pca$x[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
#colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7')], main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-20,30), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=c('2','3'),
col=base_colours[c(3,4)],pch=20, cex=1.5)
components_raw <- cbind(-pca$x[,1],pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components_raw) <- c('Principal Component 1', 'Principal Component 2')
plot(components_raw, col=colours, main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-20,30), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- components_raw[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
#colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7')], main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-20,30), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=c('0','7'),
col=base_colours[c(1,8)],pch=20, cex=1.5)
components <- components_raw[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
#colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7')], main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-20,30), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=c('2','3'),
col=base_colours[c(3,4)],pch=20, cex=1.5)
components <- components_raw[which(mnist_raw$X1 == '2' | mnist_raw$X1 == '3'),]
#colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '2' | mnist_raw$X1 == '3')], main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-20,30), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=c('2','3'),
col=base_colours[c(3,4)],pch=20, cex=1.5)
components_raw <- cbind(-pca$x[,1],pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components_raw) <- c('Principal Component 1', 'Principal Component 2')
plot(components_raw, col=colours, main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-20,30), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -16, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
legend(32.5, 4, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components_raw <- cbind(-pca$x[,1],pca$x[,2]) # sign of rotation matrix is arbitrary, switched to match python implemnetation
colnames(components_raw) <- c('Principal Component 1', 'Principal Component 2')
plot(components_raw, col=colours, main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-20,30), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, 4, legend=as.character(0:9),
col=base_colours,pch=20, cex=1.5)
components <- components_raw[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7'),]
#colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '0' | mnist_raw$X1 == '7')], main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-20,30), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=c('0','7'),
col=base_colours[c(1,8)],pch=20, cex=1.5)
components <- components_raw[which(mnist_raw$X1 == '2' | mnist_raw$X1 == '3'),]
#colnames(components) <- c('Principal Component 1', 'Principal Component 2')
plot(components, col=colours[which(mnist_raw$X1 == '2' | mnist_raw$X1 == '3')], main='2 Component PCA',pch=20, xlim=c(-10,35), ylim=c(-20,30), cex.lab=1.5, cex=1.5, cex.axis=1.5)
legend(32.5, -6, legend=c('2','3'),
col=base_colours[c(3,4)],pch=20, cex=1.5)
head(iris, 3)
head(iris, 10)
head(iris)
head(iris,20)
